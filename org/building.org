
#+title: Building Clasp
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="styles/readtheorg/css/htmlize.css"/><link rel="stylesheet" type="text/css" href="styles/readtheorg/css/readtheorg.css"/><script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script><script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script><script type="text/javascript" src="styles/lib/js/jquery.stickytableheaders.min.js"></script><script type="text/javascript" src="styles/readtheorg/js/readtheorg.js"></script>

At the moment, Clasp is supported on Linux and Mac OS X. On these
systems, you should be able to build it from source if a pre-made
package is not available or workable for you. In case you cannot get it
to compile even with the instructions below, the quickest way to get
help is to either [[file:reporting-problems][file an issue]], or to
[[file:irc][chat with us directly]].

Building on most systems will take around 4GB of RAM and ~2 hours with a
relatively modern processor, so be prepared to watch a movie or do some
other useful work until Clasp is all done.

* Building on Linux

For most distributions that have the listed
[[file:external-dependencies][dependencies]] available as packages, the
compilation should be straightforward. Simply clone Clasp and run =make=
from the root of it.

If the system is too dumb to find some of the dependencies or fails for
other reasons, you might have to manually adjust configuration
variables. For this, copy =local.config.template= to =local.config= and
edit it as appropriate. If you lack the required dependencies, try
[[file:building-with-deploy][compiling with deploy]].

The compilation output will be in the =build/clasp= directory. To launch
Clasp, run =build/clasp/bin/clasp_boehm_o=.

Clasp has been successfully built on

-  *Ubuntu 14.04*, see
   [[https://github.com/drmeister/clasp/wiki/Building-Clasp-0.4-on-Ubuntu][this
   wiki entry]]
-  *Debian Jessie*
-  *Debian Sid*
-  *Debian Wheezy*
-  *OpenSuse 13.1*
-  *Gentoo*
-  *Arch*, currently requires downgrading Clang and LLVM to 3.6 .

* Building on OS X

First you will need what is listed for OS X under the
[[file:external-dependencies][dependencies]]. Next you need an additional
step that is documented
[[https://github.com/drmeister/clasp/wiki/Building-Clasp-on-OS-X-requires-using-the-open-source-version-of-Clang][on
the wiki]]. The rest of the procedure is the same as for
[[file:building-with-deploy][building with deploy]].

The compilation output will be in the =build/clasp= directory. To launch
Clasp, run =build/clasp/MacOS/clasp_boehm_o=.

* Building With Externals-Clasp

If your system does not provide the [[file:external-dependencies][external dependencies]] 
as required by Clasp, you can use this approach instead,
which will compile them for you.

Clone [[https://github.com/drmeister/externals-clasp][externals-clasp]]
to a directory on your system. Next, create a =local.config= containing
=export GCC_TOOLCHAIN = /usr= if you are on Linux and
=export TOOLSET = clang= if you are on OS X. Next, simply run =make=
from the root of it. This will take some time to complete; maybe play a
round of pinball or [[file:irc][chat on IRC for a bit]].

The next step is building Clasp itself. For this, clone it to a
different folder and copy the =local.config.template= file within it to
=local.config=. Next, open it up and make sure to uncomment and adapt
the =EXTERNALS_CLASP_DIR= line to point to the location where you
compiled externals-clasp. Something like
=export EXTERNALS_CLASP_DIR = /opt/externals-clasp=. Finally it's time
to kick off the build process. Simply run =make= from the Clasp root.

* External Dependencies

** Linux

Simply install the appropriate packages with your package manager.

-  *llvm* 3.6
-  *clang* 3.6, including headers.
-  *boost*
-  *autoreconf* (dh-autoreconf on Ubuntu)
-  *gmp* 6.0.0, compiled with --enable-cxx
-  *expat* 2.0.1
-  *zlib* 1.2.8
-  *readline* 6.2

** OS X

Use either [[http://brew.sh/][brew]] or
[[https://www.macports.org/][ports]] to install the dependencies besides
Xcode. Make sure the binaries are in your =PATH=.

-  *Xcode* 6.4
-  *Xcode command-line tools*
-  *automake*
-  *autoconf*
-  *libtool*
-  *pkg-config*
