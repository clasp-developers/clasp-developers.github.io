#+title: Building Clasp
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="styles/readtheorg/css/htmlize.css"/><link rel="stylesheet" type="text/css" href="styles/readtheorg/css/readtheorg.css"/><script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script><script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script><script type="text/javascript" src="styles/lib/js/jquery.stickytableheaders.min.js"></script><script type="text/javascript" src="styles/readtheorg/js/readtheorg.js"></script>

Clasp is currently supported on Linux, Mac OS X, and OpenBSD.
On these
systems, you should be able to build it from source if a pre-made
package is not available or workable for you. In case you cannot get it
to compile even with the instructions below, the quickest way to get
help is to either [[https://github.com/clasp-developers/clasp/issues][file an issue]], or to
[[file:irc.org][use irc]] to 
chat with us directly]].

Building on most systems will take around 8GB of RAM and ~30 minutes with a
relatively modern processor with eight or more cores.

* Building on Linux

For most distributions that have the listed
[[External Dependencies][dependencies]] available as packages, the
compilation should be straightforward. Simply clone Clasp and run the following from
the root directory.

#+BEGIN_SRC sh
./waf distclean           # (1)
./waf configure           # (2)
./waf build_dboehmprecise # (3)

# or ...
./waf distclean configure build_dboehmprecise
#+END_SRC

1. The distclean target cleans out any previous build files.
2. The configure target configures the build and checks that all of the dependencies are available.
3. The build_dboehmprecise target tell waf to build all of clasp.

If you need to make local changes to the configuration copy =wscript.config.template= to =wscript.config= and
edit it as appropriate. If you lack the required dependencies, try
[[file:building-with-deploy][compiling with deploy]].

The compilation output will be in the =build/boehmprecise= directory. To launch
Clasp, run =build/boehmprecise/cclasp-boehmprecise=.

Clasp has been successfully built on

-  *Ubuntu 14.04*, see
   [[https://github.com/drmeister/clasp/wiki/Building-Clasp-0.4-on-Ubuntu][this
   wiki entry]]
-  *Debian Jessie*
-  *Debian Sid*
-  *Debian Wheezy*
-  *OpenSuse 13.1*
-  *Gentoo*
-  *Arch*

* Building on OS X

First you will need what is listed for OS X under the
[[External Dependencies][dependencies]]. Next you need an additional
step that is documented
The rest of the procedure is the same as for building on linux.

The compilation output will be in the =build/boehmprecise= directory. To launch
Clasp, run =build/boehmprecise/cclasp-boehmprecise=.

* Building With Externals-Clasp

If your system does not provide the [[file:external-dependencies][external dependencies]] 
as required by Clasp, you can use this approach instead,
which will compile them for you.

Clone [[https://github.com/drmeister/externals-clasp][externals-clasp]]
to a directory on your system. Next, create a =local.config= containing
=export GCC_TOOLCHAIN = /usr= if you are on Linux and
=export TOOLSET = clang= if you are on OS X. Next, simply run =make=
from the root of it. This will take some time to complete; maybe play a
round of pinball or [[file:irc.org][chat on IRC for a bit]].

The next step is building Clasp itself. For this, clone it to a
different folder and copy the =local.config.template= file within it to
=local.config=. Next, open it up and make sure to uncomment and adapt
the =EXTERNALS_CLASP_DIR= line to point to the location where you
compiled externals-clasp. Something like
=export EXTERNALS_CLASP_DIR = /opt/externals-clasp=. Finally it's time
to kick off the build process. Simply run =make= from the Clasp root.

* External Dependencies

Dependencies that are common to all Clasp builds are:
-  *llvm* 13 commit hash 972b6a3a3471c2a742c5c5d8ec004ff640d544c4
   + This is because Clasp uses cutting edge llvm features of the ORCV2 engine that have not yet made it into a standard llvm release. It will be llvm 13 that includes these new features.
-  *gmp* The GNU multiple precision math library.
-  *ffi* 

** Linux

Simply install the appropriate packages with your package manager.

-  *llvm* 3.6
-  *clang* 3.6, including headers.
-  *boost*
-  *autoreconf* (dh-autoreconf on Ubuntu)
-  *gmp* 6.0.0, compiled with --enable-cxx
-  *expat* 2.0.1
-  *zlib* 1.2.8
-  *readline* 6.2

** OS X

Use either [[http://brew.sh/][brew]] or
[[https://www.macports.org/][ports]] to install the dependencies besides
Xcode. Make sure the binaries are in your =PATH=.

-  *Xcode* 12.4
-  *Xcode command-line tools*
-  
